name: Test Integrations

on:
  pull_request_target:
    types: [opened, synchronize, reopened]

# Default permissions are read-only for security.
permissions:
  contents: read

jobs:
  # ------ JOB 1: Run Tests (Low Privilege) ------
  # This job runs the contributor's code with no write permissions.
  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository at PR head
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install mp package
        run: |
          pip install --upgrade pip
          pip install -e ./packages/mp

      - name: Run integration tests
        id: test
        run: |
          mp config --marketplace-path . --processes 10 --display-config
          mp test --repository third_party --repository commercial --raise-error-on-violations

      - name: Upload Test Report
        # Always upload the report artifact, regardless of success or failure.
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report-${{ github.run_id }}
          path: ./artifacts/test_report.md
          retention-days: 1

  # ------ JOB 2: Report Test Failure (High Privilege) ------
  # This job has write permissions but does not run contributor code.
  report-test-failure:
    name: Post Test Failure Comment
    runs-on: ubuntu-latest
    # This job ONLY runs if the 'run-tests' job fails.
    if: failure()
    needs: run-tests
    permissions:
      pull-requests: write
      
    steps:
      - name: Download test artifact
        uses: actions/download-artifact@v4
        with:
          name: test-report-${{ github.run_id }}
          path: ./artifacts
          
      - name: Comment on PR with Test Report
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const reportPath = './artifacts/test_report.md';
            if (!fs.existsSync(reportPath)) {
              console.log('Test report file not found.');
              return;
            }
            const reportBody = fs.readFileSync(reportPath, 'utf8');
            const finalComment = `‚ùå **Integration Tests Failed**\n<details>\n<summary>Click to view the full test report</summary>\n\n---\n${reportBody}\n</details>`;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: finalComment
            });

